"161-413_20110710_1619_CT_2_HEAD_Head_SS_0.01.nii.gz"),
reorient=FALSE)
ssmask = readNIfTI(file.path(datadir,
"161-413_20110710_1619_CT_2_HEAD_Head_SS_0.01_Mask.nii.gz"),
reorient=FALSE)
roi = readNIfTI(file.path(datadir,
"161-413_20110710_1619_CT_2_HEAD_HeadROI.nii.gz"),
reorient=FALSE)
pred = readNIfTI(file.path(datadir,
"161-413_20110710_1619_CT_2_HEAD_Head_mod_agg.nii.gz"),
reorient=FALSE)
pred = pred > cutoff
# mask.overlay(img, pred, window=c(0, 100))
# mask.overlay(img, roi, window=c(0, 100))
d = array(0, dim=dim(pred))
d[pred == 1 & roi == 1] = 1
d[pred == 1 & roi == 0] = 2
d[pred == 0 & roi == 1] = 2
plevs = c("Correct Prediction", "Incorrect Prediction")
d = niftiarr(pred, d)
xyz = cog(roi, ceil = TRUE)
pngname = file.path(resdir, "SS_Image_PrePredict.png")
png(filename = pngname, res=600, height=7, width=7, units= "in")
ortho2(ssimg,
window=c(0, 100),
xyz=xyz
)
dev.off()
pngname = file.path(resdir, "SS_Image_PrePredict_ROI.png")
png(filename = pngname, res=600, height=7, width=7, units= "in")
ortho2(ssimg, d,
window=c(0, 100),
xyz=xyz
)
dev.off()
slide("RIP_SlideDeck_2014Nov10.Rmd")
slide <- function(fname, envir = new.env()) {
require(slidify)
require(knitr)
slidify(fname)
fname <- gsub(".Rmd", ".html", fname)
system(sprintf('open %s', shQuote(fname)))
}
oknit <- function(fname, envir = new.env(),
knitfunc = "knit2html", ...) {
require(knitr)
do.call(knitfunc, list(input = fname, envir = envir, ... = ...))
fname <- gsub(".Rmd", ".html", fname)
system(sprintf('open %s', shQuote(fname)))
}
slide <- function(fname, envir = new.env()) {
require(slidify)
require(knitr)
slidify(fname)
fname <- gsub(".Rmd", ".html", fname)
system(sprintf('open %s', shQuote(fname)))
}
oknit <- function(fname, envir = new.env(),
knitfunc = "knit2html", ...) {
require(knitr)
do.call(knitfunc, list(input = fname, envir = envir, ... = ...))
fname <- gsub(".Rmd", ".html", fname)
system(sprintf('open %s', shQuote(fname)))
}
slide("RIP_SlideDeck_2014Nov10.Rmd")
slide("RIP_SlideDeck_2014Nov10.Rmd")
rm(list=ls())
slide("RIP_SlideDeck_2014Nov10.Rmd")
slide <- function(fname, envir = new.env()) {
require(slidify)
require(knitr)
slidify(fname)
fname <- gsub(".Rmd", ".html", fname)
system(sprintf('open %s', shQuote(fname)))
}
oknit <- function(fname, envir = new.env(),
knitfunc = "knit2html", ...) {
require(knitr)
do.call(knitfunc, list(input = fname, envir = envir, ... = ...))
fname <- gsub(".Rmd", ".html", fname)
system(sprintf('open %s', shQuote(fname)))
}
slide("RIP_SlideDeck_2014Nov10.Rmd")
slide("RIP_SlideDeck_2014Nov10.Rmd")
slide("RIP_SlideDeck_2014Nov10.Rmd")
slide("RIP_SlideDeck_2014Nov10.Rmd")
ls()
slide("RIP_SlideDeck_2014Nov10.Rmd")
slide <- function(fname, envir = new.env()) {
require(slidify)
require(knitr)
slidify(fname)
fname <- gsub(".Rmd", ".html", fname)
system(sprintf('open %s', shQuote(fname)))
}
oknit <- function(fname, envir = new.env(),
knitfunc = "knit2html", ...) {
require(knitr)
do.call(knitfunc, list(input = fname, envir = envir, ... = ...))
fname <- gsub(".Rmd", ".html", fname)
system(sprintf('open %s', shQuote(fname)))
}
knitdir <- "~/CT_Registration/RIP_SlideDeck/"
load(file=file.path(rundir, "All_Patients.Rda"))
load(file=file.path(rundir, "Randomized_Patients.Rda"))
rm.obj = ls()
rm.obj = rm.obj[ !rm.obj %in% "fname"]
rm(list=rm.obj)
library(ggplot2)
library(xtable)
library(scales)
options(stringsAsFactors=FALSE)
username <- Sys.info()["user"][[1]]
rootdir = file.path("/Users", username, "Dropbox/CTR/DHanley/MISTIE")
homedir = file.path(rootdir, "ICH Analysis")
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")
resdir <- file.path(homedir, "results")
rundir <- file.path(resdir, "Manuscript")
progdir <- file.path(homedir, "stataprograms")
datadir <- file.path(Mdir, "statacalc")
knitdir <- "~/CT_Registration/RIP_SlideDeck/"
load(file=file.path(rundir, "All_Patients.Rda"))
load(file=file.path(rundir, "Randomized_Patients.Rda"))
alldat
slide("RIP_SlideDeck_2014Nov10.Rmd")
slide <- function(fname, envir = new.env()) {
require(slidify)
require(knitr)
slidify(fname)
fname <- gsub(".Rmd", ".html", fname)
system(sprintf('open %s', shQuote(fname)))
}
oknit <- function(fname, envir = new.env(),
knitfunc = "knit2html", ...) {
require(knitr)
do.call(knitfunc, list(input = fname, envir = envir, ... = ...))
fname <- gsub(".Rmd", ".html", fname)
system(sprintf('open %s', shQuote(fname)))
}
slide("RIP_SlideDeck_2014Nov10.Rmd")
slide("RIP_SlideDeck_2014Nov10.Rmd")
slide("RIP_SlideDeck_2014Nov10.Rmd")
slide("RIP_SlideDeck_2014Nov10.Rmd")
slide("RIP_SlideDeck_2014Nov10.Rmd")
slide("RIP_SlideDeck_2014Nov10.Rmd")
slide("RIP_SlideDeck_2014Nov10.Rmd")
slide("RIP_SlideDeck_2014Nov10.Rmd")
slide("RIP_SlideDeck_2014Nov10.Rmd")
slide("RIP_SlideDeck_2014Nov10.Rmd")
slide("RIP_SlideDeck_2014Nov10.Rmd")
rm(list=ls())
library(fslr)
library(cttools)
library(scales)
homedir = path.expand("~/CT_Registration/Segmentation/")
datadir = file.path(homedir, "Seg_Figure")
resdir = file.path(homedir, "results")
rda = file.path(resdir, "Smooth_Model_Cutoffs.Rda")
load(rda)
cutoff = all.scuts["mod_agg"]
img = readNIfTI(file.path(datadir,
"161-413_20110710_1619_CT_2_HEAD_Head.nii.gz"),
reorient=FALSE)
ssimg = readNIfTI(file.path(datadir,
"161-413_20110710_1619_CT_2_HEAD_Head_SS_0.01.nii.gz"),
reorient=FALSE)
ssmask = readNIfTI(file.path(datadir,
"161-413_20110710_1619_CT_2_HEAD_Head_SS_0.01_Mask.nii.gz"),
reorient=FALSE)
roi = readNIfTI(file.path(datadir,
"161-413_20110710_1619_CT_2_HEAD_HeadROI.nii.gz"),
reorient=FALSE)
pred = readNIfTI(file.path(datadir,
"161-413_20110710_1619_CT_2_HEAD_Head_mod_agg.nii.gz"),
reorient=FALSE)
pred = pred > cutoff
# mask.overlay(img, pred, window=c(0, 100))
# mask.overlay(img, roi, window=c(0, 100))
d = array(0, dim=dim(pred))
d[pred == 1 & roi == 1] = 1
d[pred == 1 & roi == 0] = 2
d[pred == 0 & roi == 1] = 2
plevs = c("Correct Prediction", "Incorrect Prediction")
d = niftiarr(pred, d)
xyz = cog(roi, ceil = TRUE)
pngname = file.path(resdir, "SS_Image_PrePredict.png")
png(filename = pngname, res=600, height=7, width=7, units= "in")
ortho2(ssimg,
window=c(0, 100),
xyz=xyz
)
dev.off()
ortho2(ssimg, roi,
window=c(0, 100),
xyz=xyz
)
rm(list=ls())
library(fslr)
library(cttools)
library(scales)
homedir = path.expand("~/CT_Registration/Segmentation/")
datadir = file.path(homedir, "Seg_Figure")
resdir = file.path(homedir, "results")
rda = file.path(resdir, "Smooth_Model_Cutoffs.Rda")
load(rda)
cutoff = all.scuts["mod_agg"]
img = readNIfTI(file.path(datadir,
"161-413_20110710_1619_CT_2_HEAD_Head.nii.gz"),
reorient=FALSE)
ssimg = readNIfTI(file.path(datadir,
"161-413_20110710_1619_CT_2_HEAD_Head_SS_0.01.nii.gz"),
reorient=FALSE)
ssmask = readNIfTI(file.path(datadir,
"161-413_20110710_1619_CT_2_HEAD_Head_SS_0.01_Mask.nii.gz"),
reorient=FALSE)
roi = readNIfTI(file.path(datadir,
"161-413_20110710_1619_CT_2_HEAD_HeadROI.nii.gz"),
reorient=FALSE)
pred = readNIfTI(file.path(datadir,
"161-413_20110710_1619_CT_2_HEAD_Head_mod_agg.nii.gz"),
reorient=FALSE)
pred = pred > cutoff
# mask.overlay(img, pred, window=c(0, 100))
# mask.overlay(img, roi, window=c(0, 100))
d = array(0, dim=dim(pred))
d[pred == 1 & roi == 1] = 1
d[pred == 1 & roi == 0] = 2
d[pred == 0 & roi == 1] = 2
plevs = c("Correct Prediction", "Incorrect Prediction")
d = niftiarr(pred, d)
xyz = cog(roi, ceil = TRUE)
pngname = file.path(resdir, "SS_Image_PrePredict.png")
png(filename = pngname, res=600, height=7, width=7, units= "in")
ortho2(ssimg,
window=c(0, 100),
xyz=xyz
)
dev.off()
pngname = file.path(resdir, "SS_Image_PrePredict_ROI.png")
png(filename = pngname, res=600, height=7, width=7, units= "in")
ortho2(ssimg, roi,
window=c(0, 100),
xyz=xyz
)
dev.off()
dev.off()
ortho2(ssimg)
hist(roi)
mask.overlay(ssimg, roi,
window=c(0, 100),
xyz=xyz
)
pngname = file.path(resdir, "SS_Image_PrePredict_ROI.png")
png(filename = pngname, res=600, height=7, width=7, units= "in")
mask.overlay(ssimg, roi,
window=c(0, 100),
xyz=xyz
)
dev.off()
slide("RIP_SlideDeck_2014Nov10.Rmd")
slide <- function(fname, envir = new.env()) {
require(slidify)
require(knitr)
slidify(fname)
fname <- gsub(".Rmd", ".html", fname)
system(sprintf('open %s', shQuote(fname)))
}
oknit <- function(fname, envir = new.env(),
knitfunc = "knit2html", ...) {
require(knitr)
do.call(knitfunc, list(input = fname, envir = envir, ... = ...))
fname <- gsub(".Rmd", ".html", fname)
system(sprintf('open %s', shQuote(fname)))
}
slide("RIP_SlideDeck_2014Nov10.Rmd")
rm.obj = ls()
rm.obj = rm.obj[ !rm.obj %in% "fname"]
rm(list=rm.obj)
library(ggplot2)
library(xtable)
library(scales)
options(stringsAsFactors=FALSE)
username <- Sys.info()["user"][[1]]
rootdir = file.path("/Users", username, "Dropbox/CTR/DHanley/MISTIE")
homedir = file.path(rootdir, "ICH Analysis")
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")
resdir <- file.path(homedir, "results")
rundir <- file.path(resdir, "Manuscript")
progdir <- file.path(homedir, "stataprograms")
datadir <- file.path(Mdir, "statacalc")
knitdir <- "~/CT_Registration/RIP_SlideDeck/"
load(file=file.path(rundir, "All_Patients.Rda"))
load(file=file.path(rundir, "Randomized_Patients.Rda"))
slide("RIP_SlideDeck_2014Nov10.Rmd")
slide("RIP_SlideDeck_2014Nov10.Rmd")
rm.obj = ls()
rm.obj = rm.obj[ !(rm.obj %in% c("fname", "slide")]
rm(list=rm.obj)
library(ggplot2)
library(xtable)
library(scales)
options(stringsAsFactors=FALSE)
username <- Sys.info()["user"][[1]]
rootdir = file.path("/Users", username, "Dropbox/CTR/DHanley/MISTIE")
homedir = file.path(rootdir, "ICH Analysis")
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")
resdir <- file.path(homedir, "results")
rundir <- file.path(resdir, "Manuscript")
progdir <- file.path(homedir, "stataprograms")
datadir <- file.path(Mdir, "statacalc")
knitdir <- "~/CT_Registration/RIP_SlideDeck/"
load(file=file.path(rundir, "All_Patients.Rda"))
load(file=file.path(rundir, "Randomized_Patients.Rda"))
slide("RIP_SlideDeck_2014Nov10.Rmd")
slide <- function(fname, envir = new.env()) {
require(slidify)
require(knitr)
slidify(fname)
fname <- gsub(".Rmd", ".html", fname)
system(sprintf('open %s', shQuote(fname)))
}
oknit <- function(fname, envir = new.env(),
knitfunc = "knit2html", ...) {
require(knitr)
do.call(knitfunc, list(input = fname, envir = envir, ... = ...))
fname <- gsub(".Rmd", ".html", fname)
system(sprintf('open %s', shQuote(fname)))
}
rm.obj = ls()
rm.obj = rm.obj[ !(rm.obj %in% c("fname", "slide")]
rm(list=rm.obj)
library(ggplot2)
library(xtable)
library(scales)
options(stringsAsFactors=FALSE)
username <- Sys.info()["user"][[1]]
rootdir = file.path("/Users", username, "Dropbox/CTR/DHanley/MISTIE")
homedir = file.path(rootdir, "ICH Analysis")
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")
resdir <- file.path(homedir, "results")
rundir <- file.path(resdir, "Manuscript")
progdir <- file.path(homedir, "stataprograms")
datadir <- file.path(Mdir, "statacalc")
knitdir <- "~/CT_Registration/RIP_SlideDeck/"
load(file=file.path(rundir, "All_Patients.Rda"))
load(file=file.path(rundir, "Randomized_Patients.Rda"))
rm.obj
rm.obj = ls()
rm.obj
slide <- function(fname, envir = new.env()) {
require(slidify)
require(knitr)
slidify(fname)
fname <- gsub(".Rmd", ".html", fname)
system(sprintf('open %s', shQuote(fname)))
}
oknit <- function(fname, envir = new.env(),
knitfunc = "knit2html", ...) {
require(knitr)
do.call(knitfunc, list(input = fname, envir = envir, ... = ...))
fname <- gsub(".Rmd", ".html", fname)
system(sprintf('open %s', shQuote(fname)))
}
rm.obj = ls()
!(rm.obj %in% c("fname", "slide")
)
rm.obj
slide <- function(fname, envir = new.env()) {
require(slidify)
require(knitr)
slidify(fname)
fname <- gsub(".Rmd", ".html", fname)
system(sprintf('open %s', shQuote(fname)))
}
oknit <- function(fname, envir = new.env(),
knitfunc = "knit2html", ...) {
require(knitr)
do.call(knitfunc, list(input = fname, envir = envir, ... = ...))
fname <- gsub(".Rmd", ".html", fname)
system(sprintf('open %s', shQuote(fname)))
}
slide("RIP_SlideDeck_2014Nov10.Rmd")
rm(list=ls())
library(fslr)
library(cttools)
library(scales)
homedir = path.expand("~/CT_Registration/Segmentation/")
datadir = file.path(homedir, "Seg_Figure")
resdir = file.path(homedir, "results")
rda = file.path(resdir, "Smooth_Model_Cutoffs.Rda")
load(rda)
cutoff = all.scuts["mod_agg"]
img = readNIfTI(file.path(datadir,
"161-413_20110710_1619_CT_2_HEAD_Head.nii.gz"),
reorient=FALSE)
ssimg = readNIfTI(file.path(datadir,
"161-413_20110710_1619_CT_2_HEAD_Head_SS_0.01.nii.gz"),
reorient=FALSE)
ssmask = readNIfTI(file.path(datadir,
"161-413_20110710_1619_CT_2_HEAD_Head_SS_0.01_Mask.nii.gz"),
reorient=FALSE)
roi = readNIfTI(file.path(datadir,
"161-413_20110710_1619_CT_2_HEAD_HeadROI.nii.gz"),
reorient=FALSE)
pred = readNIfTI(file.path(datadir,
"161-413_20110710_1619_CT_2_HEAD_Head_mod_agg.nii.gz"),
reorient=FALSE)
pred = pred > cutoff
# mask.overlay(img, pred, window=c(0, 100))
# mask.overlay(img, roi, window=c(0, 100))
d = array(0, dim=dim(pred))
d[pred == 1 & roi == 1] = 1
d[pred == 1 & roi == 0] = 2
d[pred == 0 & roi == 1] = 2
plevs = c("Correct Prediction", "Incorrect Prediction")
d = niftiarr(pred, d)
xyz = cog(roi, ceil = TRUE)
pngname = file.path(resdir, "SS_Image_PrePredict.png")
png(filename = pngname, res=600, height=7, width=7, units= "in")
ortho2(ssimg,
window=c(0, 100),
xyz=xyz
)
dev.off()
pngname = file.path(resdir, "SS_Image_PrePredict_ROI.png")
png(filename = pngname, res=600, height=7, width=7, units= "in")
mask.overlay(ssimg, roi,
window=c(0, 100),
xyz=xyz
)
dev.off()
pngname = file.path(resdir, "SS_Image_PrePredict_Auto.png")
png(filename = pngname, res=600, height=7, width=7, units= "in")
mask.overlay(ssimg, pred,
window=c(0, 100),
xyz=xyz
)
dev.off()
slide <- function(fname, envir = new.env()) {
require(slidify)
require(knitr)
slidify(fname)
fname <- gsub(".Rmd", ".html", fname)
system(sprintf('open %s', shQuote(fname)))
}
oknit <- function(fname, envir = new.env(),
knitfunc = "knit2html", ...) {
require(knitr)
do.call(knitfunc, list(input = fname, envir = envir, ... = ...))
fname <- gsub(".Rmd", ".html", fname)
system(sprintf('open %s', shQuote(fname)))
}
rm.obj = ls()
rm.obj = rm.obj[ !(rm.obj %in% c("fname", "slide"))]
rm(list=rm.obj)
library(ggplot2)
library(xtable)
library(scales)
options(stringsAsFactors=FALSE)
username <- Sys.info()["user"][[1]]
rootdir = file.path("/Users", username, "Dropbox/CTR/DHanley/MISTIE")
homedir = file.path(rootdir, "ICH Analysis")
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")
resdir <- file.path(homedir, "results")
rundir <- file.path(resdir, "Manuscript")
progdir <- file.path(homedir, "stataprograms")
datadir <- file.path(Mdir, "statacalc")
knitdir <- "~/CT_Registration/RIP_SlideDeck/"
load(file=file.path(rundir, "All_Patients.Rda"))
load(file=file.path(rundir, "Randomized_Patients.Rda"))
slide("RIP_SlideDeck_2014Nov10.Rmd")
slide("RIP_SlideDeck_2014Nov10.Rmd")
slide("RIP_SlideDeck_2014Nov10.Rmd")
slide("RIP_SlideDeck_2014Nov10.Rmd")
slide("RIP_SlideDeck_2014Nov10.Rmd")
slide("RIP_SlideDeck_2014Nov10.Rmd")
slide <- function(fname, envir = new.env()) {
require(slidify)
require(knitr)
slidify(fname)
fname <- gsub(".Rmd", ".html", fname)
system(sprintf('open %s', shQuote(fname)))
}
oknit <- function(fname, envir = new.env(),
knitfunc = "knit2html", ...) {
require(knitr)
do.call(knitfunc, list(input = fname, envir = envir, ... = ...))
fname <- gsub(".Rmd", ".html", fname)
system(sprintf('open %s', shQuote(fname)))
}
slide("RIP_SlideDeck_2014Nov10.Rmd")
slide("RIP_SlideDeck_2014Nov10.Rmd")
library(knitr)
knit_hooks$set(webgl = hook_webgl)
opts_chunk$set(echo=FALSE, prompt=FALSE, message=FALSE, warning=FALSE, comment="", results='hide')
setwd("~/CT_Registration/RIP_SlideDeck/")
slide("RIP_SlideDeck_2014Nov10.Rmd")
slide("RIP_SlideDeck_2014Nov10.Rmd")
library(knitr)
knit_hooks$set(webgl = hook_webgl)
opts_chunk$set(echo=FALSE, prompt=FALSE, message=FALSE, warning=FALSE, comment="", results='hide')
setwd("~/CT_Registration/RIP_SlideDeck/")
slide("RIP_SlideDeck_2014Nov10.Rmd")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
slide("RIP_SlideDeck_2014Nov10.Rmd")
slide("RIP_SlideDeck_2014Nov10.Rmd")
slide("RIP_SlideDeck_2014Nov10.Rmd")
deck2pdf
?deck2pdf
slide("RIP_SlideDeck_2014Nov10.Rmd")
slide("RIP_SlideDeck_2014Nov10.Rmd")
