# nothing to its right is evaluated
# this # is still a comment
### you can use many #'s as you want
# sometimes you have a really long comment,
#    like explaining what you are doing
#    for a step in analysis.
# Take it to another line
## ----code----------------------------------------------------------------
print("I'm code")
## ----calcDemo------------------------------------------------------------
2 + 2
2 * 4
2 ^ 3
## ----calcDemo2-----------------------------------------------------------
2 + (2 * 3)^2
(1 + 3) / 2 + 45
x = 2 # Same as: x <- 2
x
x * 4
x + 2
2 + "fail"
## ---- echo = FALSE-------------------------------------------------------
library(knitr)
opts_chunk$set(comment = "")
## ------------------------------------------------------------------------
#################
# Title: Demo R Script
# Author: Andrew Jaffe
# Date: 6/15/2015
# Purpose: Demonstrate comments in R
###################
# nothing to its right is evaluated
# this # is still a comment
### you can use many #'s as you want
# sometimes you have a really long comment,
#    like explaining what you are doing
#    for a step in analysis.
# Take it to another line
## ----code----------------------------------------------------------------
print("I'm code")
## ----calcDemo------------------------------------------------------------
2 + 2
2 * 4
2 ^ 3
## ----calcDemo2-----------------------------------------------------------
2 + (2 * 3)^2
(1 + 3) / 2 + 45
## ----assign--------------------------------------------------------------
x = 2 # Same as: x <- 2
x
x * 4
x + 2
source('~/Downloads/Basic_R.R')
source('~/.active-rstudio-document')
debugSource('~/Downloads/Basic_R.R')
source('~/.active-rstudio-document')
x = c(1, 2, 6, 5)
# plot data
plot(x)
# 1. create a new variable called 'my.num' that contains 5 numbers
my.num = c(4,7,8,12,14)
# 2. mulitply 'my.num' by 3
my.num*3
my.char = c("Andrew", "John", "John", "Andrew")
both = c(my.num, my.char)
length(both)
class(both)
my.num
my.char
class(my.num)
class(my.char)
class(both)
both
both / 3
x = c(1,2,3,4,5)
y =  c(10,20,30,40)
x + y
x
y
x + y
y = c(y,50)
x + y
x*y
####################
# "Basic R" Module - Lab
# 1/4/16
####################
## In this lab you can use the interactive console to explore
## 	  but please record your commands here.
## Remember anything you type here can be "sent" to the console with
##    Cmd-Enter (OS-X) or Cntr-Enter (Windows/Linux).
# 1. create a new variable called 'my.num' that contains 5 numbers
my.num = c(4,7,8,12,14)
# 2. mulitply 'my.num' by 3
my.num*3
# 3. create a second variable called 'my.char' that contains 4 character strings
my.char = c("Andrew", "John", "John", "Andrew")
# 4. combine the two variables 'my.num' and 'my.char' into a variable called 'both'
both = c(my.num, my.char)
# 5. what is the length of 'both'?
length(both)
# 6. what class is 'both'?
class(both)
# 7. divide 'both' by 3, what happens?
both / 3
# 8. create a vector with elements 1 2 3 4 5 and call it x
x = c(1,2,3,4,5)
# 9. create another vector with elements 10 20 30 40 and call it y
y =  c(10,20,30,40)
# 10. what happens if you try to add x and y together? why?
x + y
x+ 7
x + y
print(x + y)
x + y
print(x + y)
head(x)
mtcars
x = mtcars
View(x)
View(y)
View(x)
View(y)
head(x)
head(y)
head(x)
str(x)
library(dplyr)
?rename
filter
dplyr::filter
stats::filter
head(stats::filter)
select
lag
stats::filter()
stats::filter
tail(stats::filter)
tail(stats::filter, 20)
?base:::Logic
?Logic
?base::Arithmetic
?Ops
x = c(1,4,2,8)
x == 2
x != 2
x > 2
x >= 2
x <= 2
x < 2
source('~/.active-rstudio-document', echo=TRUE)
colnames(df)
## ---- echo = FALSE-------------------------------------------------------
library(knitr)
opts_chunk$set(comment = "")
## ------------------------------------------------------------------------
x = c(1, 4, 2, 8, 10)
x[2]
## ------------------------------------------------------------------------
x = c(1, 2, 4, 8, 10)
x[5]
x[c(2,5)]
## ----negativeIndex-------------------------------------------------------
x[-2] # all but the second
## ----negativeIndex2------------------------------------------------------
x[-c(1,2,3)] # drop first 3
# x[-1:3] # shorthand. R sees as -1 to 3
x[-(1:3)] # needs parentheses
## ------------------------------------------------------------------------
x
x > 2
x[ x > 2 ]
## ------------------------------------------------------------------------
x[ x > 2 & x < 5 ]
x[ x > 5 | x == 2 ]
## ------------------------------------------------------------------------
which(x > 5 | x == 2) # returns index
x[ which(x > 5 | x == 2) ]
x[ x > 5 | x == 2 ]
## ------------------------------------------------------------------------
set.seed(2016) # reproducbility
df = data.frame(x = c(1, 2, 4, 10, 10),
x2 = rpois(5, 10),
y = rnorm(5),
z = rpois(5, 6)
)
df
colnames(df)
colnames(df) = c("x", "X", "y", "z")
head(df)
library(dplyr)
stats::filter
filter
df = rename(df, X = x2)
df
## ---- echo = FALSE-------------------------------------------------------
library(knitr)
opts_chunk$set(comment = "")
## ------------------------------------------------------------------------
x = c(1, 4, 2, 8, 10)
x[2]
## ------------------------------------------------------------------------
x = c(1, 2, 4, 8, 10)
x[5]
x[c(2,5)]
## ----negativeIndex-------------------------------------------------------
x[-2] # all but the second
## ----negativeIndex2------------------------------------------------------
x[-c(1,2,3)] # drop first 3
# x[-1:3] # shorthand. R sees as -1 to 3
x[-(1:3)] # needs parentheses
## ------------------------------------------------------------------------
x
x > 2
x[ x > 2 ]
## ------------------------------------------------------------------------
x[ x > 2 & x < 5 ]
x[ x > 5 | x == 2 ]
## ------------------------------------------------------------------------
which(x > 5 | x == 2) # returns index
x[ which(x > 5 | x == 2) ]
x[ x > 5 | x == 2 ]
## ------------------------------------------------------------------------
set.seed(2016) # reproducbility
df = data.frame(x = c(1, 2, 4, 10, 10),
x2 = rpois(5, 10),
y = rnorm(5),
z = rpois(5, 6)
)
## ------------------------------------------------------------------------
colnames(df) = c("x", "X", "y", "z")
head(df)
colnames(df) = c("x", "x2", "y", "z") #reset
df = rename(df, X = x2)
head(df)
?head
head(df)
head(x = df)
?read.table
head(n = 2, x = df)
head(n = 2, df)
df$x
median(df$x)
df[, x]
df[, "x"]
x
select(df, "x")
select(df, x)
select_(df, "x")
?select
select(df, x)
df[,x]
select_(df, "x")
df[, "x"]
?select
x
head(x, 2)
x %>% head(2)
sqrt(mean(x))
log(sqrt(mean(x)))
sqrt(log(sqrt(mean(x))))
x %>% mean %>% sqrt %>% log %>% sqrt
x
x2 = c(x, 5, 2, 3)
cbind(df, x2)
head(df)
df = rename(df, x2 = X)
head(df)
cbind(df, x2)
x2
length(x)
length(x2)
dim(df)
nrow(df)
cbind(df, x2)
df
select(df, -x)
df
select(df, -x)
df = select(df, -x)
select(df, -c("y", "z"))
-c("y", "z")
select(df, -y, yz
select(df, -y, -z)
select(df, -c(y, z))
select(df, c(-y, -z))
df[, -c("y", "z")]
df[, -c(y, z)]
## ---- echo = FALSE-------------------------------------------------------
library(knitr)
opts_chunk$set(comment = "")
## ------------------------------------------------------------------------
x = c(1, 4, 2, 8, 10)
x[2]
## ------------------------------------------------------------------------
x = c(1, 2, 4, 8, 10)
x[5]
x[c(2,5)]
## ----negativeIndex-------------------------------------------------------
x[-2] # all but the second
## ----negativeIndex2------------------------------------------------------
x[-c(1,2,3)] # drop first 3
# x[-1:3] # shorthand. R sees as -1 to 3
x[-(1:3)] # needs parentheses
## ------------------------------------------------------------------------
x
x > 2
x[ x > 2 ]
## ------------------------------------------------------------------------
x[ x > 2 & x < 5 ]
x[ x > 5 | x == 2 ]
## ------------------------------------------------------------------------
which(x > 5 | x == 2) # returns index
x[ which(x > 5 | x == 2) ]
x[ x > 5 | x == 2 ]
## ------------------------------------------------------------------------
set.seed(2016) # reproducbility
df = data.frame(x = c(1, 2, 4, 10, 10),
x2 = rpois(5, 10),
y = rnorm(5),
z = rpois(5, 6)
)
## ------------------------------------------------------------------------
colnames(df) = c("x", "X", "y", "z")
head(df)
colnames(df) = c("x", "x2", "y", "z") #reset
df
cn =colnames(df)
c("z", cn[ cn!="z"])
c("z", colnames(df)[ colnames(df)!="z"])
c("z", cn[ cn!="z"])
select(df, everything(), x)
select(df, everything(), y)
?select
select(df, -matches("x"))
select(df, -matches("x"), matches('x'))
select(df, -one_of("x"), one_of('x'))
help("select")
help("filter")
?filter
library(dplyr)
?filter
?select
## ---- echo = FALSE-------------------------------------------------------
library(knitr)
opts_chunk$set(comment = "")
## ------------------------------------------------------------------------
x = c(1, 4, 2, 8, 10)
x[2]
## ------------------------------------------------------------------------
x = c(1, 2, 4, 8, 10)
x[5]
x[c(2,5)]
## ----negativeIndex-------------------------------------------------------
x[-2] # all but the second
## ----negativeIndex2------------------------------------------------------
x[-c(1,2,3)] # drop first 3
# x[-1:3] # shorthand. R sees as -1 to 3
x[-(1:3)] # needs parentheses
## ------------------------------------------------------------------------
x
x > 2
x[ x > 2 ]
## ------------------------------------------------------------------------
x[ x > 2 & x < 5 ]
x[ x > 5 | x == 2 ]
## ------------------------------------------------------------------------
which(x > 5 | x == 2) # returns index
x[ which(x > 5 | x == 2) ]
x[ x > 5 | x == 2 ]
## ------------------------------------------------------------------------
set.seed(2016) # reproducbility
df = data.frame(x = c(1, 2, 4, 10, 10),
x2 = rpois(5, 10),
y = rnorm(5),
z = rpois(5, 6)
)
## ------------------------------------------------------------------------
colnames(df) = c("x", "X", "y", "z")
head(df)
colnames(df) = c("x", "x2", "y", "z") #reset
df
df[ order(df$y),]
arrange(df, x
)
arrange(df, x, z)
)
arrange(df, x)
arrange(df, x, z)
arrange(df, desc(x))
arrange(df, desc(x), z)
filter(df, x == 1)
filter(df, x != 1)
?sample_frac()
Inf . 2
Inf > 2
NaN > 2
mystr = c("Hey", "", "ho", "let's", "go")
is.na(mystr)
mystr[ mystr == ""] = NA
is.na(mystr)
mystr
factor(mystr)
NA & TRUE
NA & FALSE
NA | TRUE
NA & TRUE
?table
tab <- table(c(0, 1, 2, 3, 2, 3, 3, 2,2, 3),
c(0, 1, 2, 3, 2, 3, 3, 4, 4, 3),
useNA = "always")
tab
tab <- table(x = c(0, 1, 2, 3, 2, 3, 3, 2,2, 3),
y = c(0, 1, 2, 3, 2, 3, 3, 4, 4, 3),
useNA = "always")
tab
x = c(0, 1, 2, 3, 2, 3, 3, 2,2, 3);
y = c(0, 1, 2, 3, 2, 3, 3, 4, 4, 3)
x
y
table(x, y)
table(x)
table(y)
table(x, y)
prop.table(table(x, y), 1)
prop.table(table(x, y), 2)
prop.table(table(x))
library(car, quietly = TRUE)
x = rep(c("Male", "M", "m", "f", "Female", "female" ),
each = 3)
x
unique(x)
table(x)
sort(table(x))
sample(x)
sample(x, , size = 10replace = FALSE)
sample(x, , size = 10,replace = FALSE)
table(sample(x, , size = 10,replace = FALS)E)
table(sample(x, , size = 10,replace = FALSE))
tab  = table(sample(x, , size = 10,replace = FALSE))
sort(tab)
sort(tab, decreasing = TRUE)
tab[tab > 1]
duplicated(x)
x
table(x)
tab = table(x)
tab  = table(sample(x, , size = 10,replace = FALSE))
tab
tab[ tab > 1]
names(tab[ tab > 1])
x = c("hey", 'ho')
x
x = c("hey", "Let's go")
paste("Visit", 1:5)
paste0("Visit", 1:5)
strsplit("I.like.strings", ".")
strsplit("I.like.strings", ".", fixed = TRUE)
?str_detect
library(stringr)
?str_detect
?str_split
?str_extract
?modifiers
cbind(rep("Monday", 3), c("orangeAlightings", "orangeAverage", "orangeBoardings"))
cbind(rep("Monday", 3), rep("orange", 3), Average = rnorm(3), Alightings = rnorm(3), Boardings = rnorm(3))
data.frame(rep("Monday", 3), rep("orange", 3), Average = rnorm(3), Alightings = rnorm(3), Boardings = rnorm(3))
cbind(rep("Monday", 3), c("orangeAlightings", "orangeAverage", "orangeBoardings"))
library(lubridate)
mdy(c("01-06-2016", "01-06/2016", "01/06/2016"))
?as.Date
mdy(c("01-06-2016", "01-06/2016", "01/06/2016"))
dmy(c("01-06-2016", "01-06/2016", "01/06/2016"))
mydays = mdy(c("01-06-2016", "01-06/2016", "01/06/2016"))
day(mydays)
month(mydays)
year(mydays)
?year
?month
mydays - 1
?period
mydays - period(1, "day")
?difftime
mydays = mdy(c("01-06-2016", "01-06/2016", "01/06/2016", "01-08-2016", "01-01-2016"))
mydays
?difftime
difftime(mydays, mydays[1])
difftime(mydays, mydays[1], units = "days")
dt = difftime(mydays, mydays[1], units = "days")
class(dt)
as.numeric(dt)
mydays
cbind(mydays, 0:length(mydays))
cbind(mydays, 0:length(mydays)-1)
cbind(mydays, 0:(length(mydays)-1))
data.frame(mydays, 0:(length(mydays)-1))
data.frame(mydays, days_from_baseline = 0:(length(mydays)-1))
source('~/.active-rstudio-document', echo=TRUE)
pander(dl)
dl
source('~/.active-rstudio-document', echo=TRUE)
dl
```{r outtab, results='asis'}
pander(dl)
```
pander(dl)
datatable(dl, filter = "none", selection = "none", rownames = FALSE,
options = list(dom = 't', autoWidth = TRUE,
columnDefs = list(list(
className = 'dt-center',
targets = 0)))
)
