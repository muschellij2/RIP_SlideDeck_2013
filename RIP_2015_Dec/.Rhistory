x[ x > 5 | x == 2 ]
## ------------------------------------------------------------------------
set.seed(2016) # reproducbility
df = data.frame(x = c(1, 2, 4, 10, 10),
x2 = rpois(5, 10),
y = rnorm(5),
z = rpois(5, 6)
)
## ------------------------------------------------------------------------
colnames(df) = c("x", "X", "y", "z")
head(df)
colnames(df) = c("x", "x2", "y", "z") #reset
df = rename(df, X = x2)
head(df)
?head
head(df)
head(x = df)
?read.table
head(n = 2, x = df)
head(n = 2, df)
df$x
median(df$x)
df[, x]
df[, "x"]
x
select(df, "x")
select(df, x)
select_(df, "x")
?select
select(df, x)
df[,x]
select_(df, "x")
df[, "x"]
?select
x
head(x, 2)
x %>% head(2)
sqrt(mean(x))
log(sqrt(mean(x)))
sqrt(log(sqrt(mean(x))))
x %>% mean %>% sqrt %>% log %>% sqrt
x
x2 = c(x, 5, 2, 3)
cbind(df, x2)
head(df)
df = rename(df, x2 = X)
head(df)
cbind(df, x2)
x2
length(x)
length(x2)
dim(df)
nrow(df)
cbind(df, x2)
df
select(df, -x)
df
select(df, -x)
df = select(df, -x)
select(df, -c("y", "z"))
-c("y", "z")
select(df, -y, yz
select(df, -y, -z)
select(df, -c(y, z))
select(df, c(-y, -z))
df[, -c("y", "z")]
df[, -c(y, z)]
## ---- echo = FALSE-------------------------------------------------------
library(knitr)
opts_chunk$set(comment = "")
## ------------------------------------------------------------------------
x = c(1, 4, 2, 8, 10)
x[2]
## ------------------------------------------------------------------------
x = c(1, 2, 4, 8, 10)
x[5]
x[c(2,5)]
## ----negativeIndex-------------------------------------------------------
x[-2] # all but the second
## ----negativeIndex2------------------------------------------------------
x[-c(1,2,3)] # drop first 3
# x[-1:3] # shorthand. R sees as -1 to 3
x[-(1:3)] # needs parentheses
## ------------------------------------------------------------------------
x
x > 2
x[ x > 2 ]
## ------------------------------------------------------------------------
x[ x > 2 & x < 5 ]
x[ x > 5 | x == 2 ]
## ------------------------------------------------------------------------
which(x > 5 | x == 2) # returns index
x[ which(x > 5 | x == 2) ]
x[ x > 5 | x == 2 ]
## ------------------------------------------------------------------------
set.seed(2016) # reproducbility
df = data.frame(x = c(1, 2, 4, 10, 10),
x2 = rpois(5, 10),
y = rnorm(5),
z = rpois(5, 6)
)
## ------------------------------------------------------------------------
colnames(df) = c("x", "X", "y", "z")
head(df)
colnames(df) = c("x", "x2", "y", "z") #reset
df
cn =colnames(df)
c("z", cn[ cn!="z"])
c("z", colnames(df)[ colnames(df)!="z"])
c("z", cn[ cn!="z"])
select(df, everything(), x)
select(df, everything(), y)
?select
select(df, -matches("x"))
select(df, -matches("x"), matches('x'))
select(df, -one_of("x"), one_of('x'))
help("select")
help("filter")
?filter
library(dplyr)
?filter
?select
## ---- echo = FALSE-------------------------------------------------------
library(knitr)
opts_chunk$set(comment = "")
## ------------------------------------------------------------------------
x = c(1, 4, 2, 8, 10)
x[2]
## ------------------------------------------------------------------------
x = c(1, 2, 4, 8, 10)
x[5]
x[c(2,5)]
## ----negativeIndex-------------------------------------------------------
x[-2] # all but the second
## ----negativeIndex2------------------------------------------------------
x[-c(1,2,3)] # drop first 3
# x[-1:3] # shorthand. R sees as -1 to 3
x[-(1:3)] # needs parentheses
## ------------------------------------------------------------------------
x
x > 2
x[ x > 2 ]
## ------------------------------------------------------------------------
x[ x > 2 & x < 5 ]
x[ x > 5 | x == 2 ]
## ------------------------------------------------------------------------
which(x > 5 | x == 2) # returns index
x[ which(x > 5 | x == 2) ]
x[ x > 5 | x == 2 ]
## ------------------------------------------------------------------------
set.seed(2016) # reproducbility
df = data.frame(x = c(1, 2, 4, 10, 10),
x2 = rpois(5, 10),
y = rnorm(5),
z = rpois(5, 6)
)
## ------------------------------------------------------------------------
colnames(df) = c("x", "X", "y", "z")
head(df)
colnames(df) = c("x", "x2", "y", "z") #reset
df
df[ order(df$y),]
arrange(df, x
)
arrange(df, x, z)
)
arrange(df, x)
arrange(df, x, z)
arrange(df, desc(x))
arrange(df, desc(x), z)
filter(df, x == 1)
filter(df, x != 1)
?sample_frac()
Inf . 2
Inf > 2
NaN > 2
mystr = c("Hey", "", "ho", "let's", "go")
is.na(mystr)
mystr[ mystr == ""] = NA
is.na(mystr)
mystr
factor(mystr)
NA & TRUE
NA & FALSE
NA | TRUE
NA & TRUE
?table
tab <- table(c(0, 1, 2, 3, 2, 3, 3, 2,2, 3),
c(0, 1, 2, 3, 2, 3, 3, 4, 4, 3),
useNA = "always")
tab
tab <- table(x = c(0, 1, 2, 3, 2, 3, 3, 2,2, 3),
y = c(0, 1, 2, 3, 2, 3, 3, 4, 4, 3),
useNA = "always")
tab
x = c(0, 1, 2, 3, 2, 3, 3, 2,2, 3);
y = c(0, 1, 2, 3, 2, 3, 3, 4, 4, 3)
x
y
table(x, y)
table(x)
table(y)
table(x, y)
prop.table(table(x, y), 1)
prop.table(table(x, y), 2)
prop.table(table(x))
library(car, quietly = TRUE)
x = rep(c("Male", "M", "m", "f", "Female", "female" ),
each = 3)
x
unique(x)
table(x)
sort(table(x))
sample(x)
sample(x, , size = 10replace = FALSE)
sample(x, , size = 10,replace = FALSE)
table(sample(x, , size = 10,replace = FALS)E)
table(sample(x, , size = 10,replace = FALSE))
tab  = table(sample(x, , size = 10,replace = FALSE))
sort(tab)
sort(tab, decreasing = TRUE)
tab[tab > 1]
duplicated(x)
x
table(x)
tab = table(x)
tab  = table(sample(x, , size = 10,replace = FALSE))
tab
tab[ tab > 1]
names(tab[ tab > 1])
x = c("hey", 'ho')
x
x = c("hey", "Let's go")
paste("Visit", 1:5)
paste0("Visit", 1:5)
strsplit("I.like.strings", ".")
strsplit("I.like.strings", ".", fixed = TRUE)
?str_detect
library(stringr)
?str_detect
?str_split
?str_extract
?modifiers
cbind(rep("Monday", 3), c("orangeAlightings", "orangeAverage", "orangeBoardings"))
cbind(rep("Monday", 3), rep("orange", 3), Average = rnorm(3), Alightings = rnorm(3), Boardings = rnorm(3))
data.frame(rep("Monday", 3), rep("orange", 3), Average = rnorm(3), Alightings = rnorm(3), Boardings = rnorm(3))
cbind(rep("Monday", 3), c("orangeAlightings", "orangeAverage", "orangeBoardings"))
library(lubridate)
mdy(c("01-06-2016", "01-06/2016", "01/06/2016"))
?as.Date
mdy(c("01-06-2016", "01-06/2016", "01/06/2016"))
dmy(c("01-06-2016", "01-06/2016", "01/06/2016"))
mydays = mdy(c("01-06-2016", "01-06/2016", "01/06/2016"))
day(mydays)
month(mydays)
year(mydays)
?year
?month
mydays - 1
?period
mydays - period(1, "day")
?difftime
mydays = mdy(c("01-06-2016", "01-06/2016", "01/06/2016", "01-08-2016", "01-01-2016"))
mydays
?difftime
difftime(mydays, mydays[1])
difftime(mydays, mydays[1], units = "days")
dt = difftime(mydays, mydays[1], units = "days")
class(dt)
as.numeric(dt)
mydays
cbind(mydays, 0:length(mydays))
cbind(mydays, 0:length(mydays)-1)
cbind(mydays, 0:(length(mydays)-1))
data.frame(mydays, 0:(length(mydays)-1))
data.frame(mydays, days_from_baseline = 0:(length(mydays)-1))
mat = matrix(c("0", "No Stroke Symptoms",
"1-4", "Minor Stroke",
"5-15", "Moderate Stroke",
"16-20", "Moderate to Severe Stroke",
"21-42", "Severe Stroke"), byrow = TRUE, ncol = 5)
colnames(mat) = c("NIHSS Score", "Stroke Severity")
mat
mat = matrix(c("0", "No Stroke Symptoms",
"1-4", "Minor Stroke",
"5-15", "Moderate Stroke",
"16-20", "Moderate to Severe Stroke",
"21-42", "Severe Stroke"), byrow = TRUE, ncol = 2)
colnames(mat) = c("NIHSS Score", "Stroke Severity")
mat
pander(mat)
library(pander)
pander(mat)
mat = data.frame(mat, stringsAsFactors = FALSE)
pander(mat)
system.file(package= "rmarkdown")
system(paste0("open ",system.file(package= "rmarkdown"))
)
x = pandoc.table.return(tb1, style="rmarkdown", split.table = Inf)
source('~/.active-rstudio-document', echo=TRUE)
x = pandoc.table.return(tb1, style="rmarkdown", split.table = Inf)
x
tb1
library(tableone)
library(stargazer)
library(pander)
alldemog = read.csv("All_180_FollowUp_wDemographics.csv", as.is = TRUE)
alldemog = alldemog[, c("patientName", "Clot_Location_RC")]
n.ids = length(unique(fdf$id))
demog = as.numeric(gsub("-", "", fdf$id))
demog = all.alldat[ all.alldat$patientName %in% demog, ]
demog$Clot_Location_RC = NULL
# demog = merge(demog, alldemog, all.x = TRUE )
stopifnot(nrow(demog) == n.ids)
dim(demog)
dim(fdf)
xxx = load(file=file.path(knitdir, "111_Filenames.Rda"))
xxx
fnames
source('~/.active-rstudio-document', echo=TRUE)
rm(list = rm.obj)
library(ggplot2)
library(xtable)
library(scales)
library(fslr)
library(pander)
options(stringsAsFactors = FALSE)
rootdir = path.expand("~/Dropbox/CTR/DHanley/MISTIE")
homedir = file.path(rootdir, "ICH Analysis")
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")
resdir <- file.path(homedir, "results")
rundir <- file.path(resdir, "Manuscript")
progdir <- file.path(homedir, "stataprograms")
datadir <- file.path(Mdir, "statacalc")
knitdir <- "~/CT_Registration/RIP_SlideDeck/RIP_2015_Dec/"
load(file=file.path(rundir, "All_IncludingICES_Patients.Rda"))
load(file=file.path(rundir, "Randomized_Patients.Rda"))
load(file=file.path(knitdir, "111_Filenames.Rda"))
pt.ids = c(100318L, 100362L, 100365L, 101306L, 101307L, 101308L, 102317L,
102322L, 102324L, 102331L, 102360L, 102367L, 102374L, 102391L,
102393L, 102403L, 102406L, 120376L, 131310L, 131316L, 131334L,
131354L, 133409L, 133417L, 134304L, 134305L, 134320L, 134327L,
134345L, 134380L, 134381L, 134382L, 134392L, 134408L, 134412L,
134416L, 152302L, 152303L, 152353L, 157328L, 157329L, 157332L,
157335L, 157336L, 157370L, 157372L, 157399L, 157410L, 161413L,
173312L, 173313L, 173325L, 173341L, 173361L, 173364L, 173368L,
173384L, 173396L, 173404L, 175387L, 175397L, 175405L, 179373L,
179383L, 179386L, 179394L, 179395L, 179402L, 184388L, 191301L,
191311L, 191314L, 191315L, 191319L, 191321L, 191333L, 191375L,
191400L, 205509L, 205517L, 205519L, 216390L, 219350L, 222337L,
222357L, 222358L, 223355L, 223369L, 223407L, 225502L, 225503L,
225504L, 225505L, 225506L, 225507L, 225510L, 225511L, 225515L,
225524L, 230356L, 230363L, 230366L, 230371L, 230377L, 232514L,
232516L, 234385L, 265389L, 265398L, 289518L, 289525L)
fdf = fdf[ fdf$id %in% pt.ids, ]
fd
fdf
rm.obj = ls()
rm.obj = rm.obj[ !(rm.obj %in% c("fname", "slide"))]
rm(list = rm.obj)
library(ggplot2)
library(xtable)
library(scales)
library(fslr)
library(pander)
options(stringsAsFactors = FALSE)
rootdir = path.expand("~/Dropbox/CTR/DHanley/MISTIE")
homedir = file.path(rootdir, "ICH Analysis")
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")
resdir <- file.path(homedir, "results")
rundir <- file.path(resdir, "Manuscript")
progdir <- file.path(homedir, "stataprograms")
datadir <- file.path(Mdir, "statacalc")
knitdir <- "~/CT_Registration/RIP_SlideDeck/RIP_2015_Dec/"
load(file=file.path(rundir, "All_IncludingICES_Patients.Rda"))
load(file=file.path(rundir, "Randomized_Patients.Rda"))
load(file=file.path(knitdir, "111_Filenames.Rda"))
fdf
fdf$iddir
fdf$id
rm.obj = ls()
rm.obj = rm.obj[ !(rm.obj %in% c("fname", "slide"))]
rm(list = rm.obj)
library(ggplot2)
library(xtable)
library(scales)
library(fslr)
library(pander)
options(stringsAsFactors = FALSE)
rootdir = path.expand("~/Dropbox/CTR/DHanley/MISTIE")
homedir = file.path(rootdir, "ICH Analysis")
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")
resdir <- file.path(homedir, "results")
rundir <- file.path(resdir, "Manuscript")
progdir <- file.path(homedir, "stataprograms")
datadir <- file.path(Mdir, "statacalc")
knitdir <- "~/CT_Registration/RIP_SlideDeck/RIP_2015_Dec/"
load(file=file.path(rundir, "All_IncludingICES_Patients.Rda"))
load(file=file.path(rundir, "Randomized_Patients.Rda"))
load(file=file.path(knitdir, "111_Filenames.Rda"))
pt.ids = c(100318L, 100362L, 100365L, 101306L, 101307L, 101308L, 102317L,
102322L, 102324L, 102331L, 102360L, 102367L, 102374L, 102391L,
102393L, 102403L, 102406L, 120376L, 131310L, 131316L, 131334L,
131354L, 133409L, 133417L, 134304L, 134305L, 134320L, 134327L,
134345L, 134380L, 134381L, 134382L, 134392L, 134408L, 134412L,
134416L, 152302L, 152303L, 152353L, 157328L, 157329L, 157332L,
157335L, 157336L, 157370L, 157372L, 157399L, 157410L, 161413L,
173312L, 173313L, 173325L, 173341L, 173361L, 173364L, 173368L,
173384L, 173396L, 173404L, 175387L, 175397L, 175405L, 179373L,
179383L, 179386L, 179394L, 179395L, 179402L, 184388L, 191301L,
191311L, 191314L, 191315L, 191319L, 191321L, 191333L, 191375L,
191400L, 205509L, 205517L, 205519L, 216390L, 219350L, 222337L,
222357L, 222358L, 223355L, 223369L, 223407L, 225502L, 225503L,
225504L, 225505L, 225506L, 225507L, 225510L, 225511L, 225515L,
225524L, 230356L, 230363L, 230366L, 230371L, 230377L, 232514L,
232516L, 234385L, 265389L, 265398L, 289518L, 289525L)
fdf$id = as.numeric(gsub("-", "", fdf$id))
fdf = fdf[ fdf$id %in% pt.ids, ]
library(tableone)
library(stargazer)
library(pander)
alldemog = read.csv("All_180_FollowUp_wDemographics.csv", as.is = TRUE)
alldemog = alldemog[, c("patientName", "Clot_Location_RC")]
n.ids = length(unique(fdf$id))
demog = fdf$id
demog = all.alldat[ all.alldat$patientName %in% demog, ]
demog$Clot_Location_RC = NULL
table(demog$Clot_Location_Site)
library(tableone)
library(stargazer)
library(pander)
alldemog = read.csv("All_180_FollowUp_wDemographics.csv", as.is = TRUE)
alldemog = alldemog[, c("patientName", "Clot_Location_RC")]
n.ids = length(unique(fdf$id))
demog = fdf$id
demog = all.alldat[ all.alldat$patientName %in% demog, ]
demog$Clot_Location_RC = NULL
demog = merge(demog, alldemog, all.x = TRUE )
stopifnot(nrow(demog) == n.ids)
demog$Diagnostic_ICH_Volume =demog$ICH_Dx_10 * 10
demog$Diagnostic_IVH_Volume =demog$IVH_Dx_10 * 10
tt = sort(table(demog$Clot_Location_RC), decreasing = TRUE)
nclot = names(tt)[tt > 0]
demog$Clot_Location_RC = factor(demog$Clot_Location_RC, levels = nclot)
table(demog$Clot_Location_RC)
length(demog$Clot_Location_RC)
tb1
source('~/.active-rstudio-document', echo=TRUE)
tb1
pander
tb1
pander(tb1)
class(tb1)
tb1 = cbind(rownames(tb1), tb1)
rownames(tb1) = NULL
pander(tb1)
tb1 = data.frame(tb1)
pander(tb1)
?tb1
?pander
pander:::pandoc.table
?pander:::pandoc.table
pander(tb1, justify = c("lr"))
source('~/.active-rstudio-document', echo=TRUE)
tb1
tb1[,1] = gsub("   ", "&nbsp;", tb1[,1])
pander(tb1, justify = c("lr"))
source('~/.active-rstudio-document', echo=TRUE)
###########################################################
## This calculates the volumes for the Rigid back trans
## formed data
##
## Author: John Muschelli
## Last updated: May 20, 2014
###########################################################
rm(list=ls())
library(plyr)
library(cttools)
library(fslr)
library(ROCR)
library(matrixStats)
library(extrantsr)
library(ANTsR)
library(scales)
homedir = "/Applications"
rootdir = "/Volumes/DATA_LOCAL/Image_Processing"
if (Sys.info()[["user"]] %in% "jmuschel") {
homedir = "~"
rootdir = "/dexter/disk2/smart/stroke_ct/ident"
}
progdir = file.path(rootdir, "programs")
segdir = file.path(progdir, "Segmentation")
basedir = file.path(rootdir, "Registration")
tempdir = file.path(rootdir, "Template")
atlasdir = file.path(tempdir, "atlases")
outdir = file.path(basedir, "results")
cn = c("mod_agg")
icut = c("_dice")
types = "_zval2"
type = types[1]
correct = "none"
adder = ""
scut.filename = file.path(outdir,
paste0("Smooth_Model_Cutoffs", adder, ".Rda"))
load(file=scut.filename)
#########
# Loading in fdf
#########
outfile = file.path(outdir,
"111_Filenames_with_volumes_stats.Rda")
load(file = outfile)
group = "Test"
